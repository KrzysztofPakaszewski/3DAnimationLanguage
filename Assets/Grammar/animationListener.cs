//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammar\Animation.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace anim {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AnimationParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IAnimationListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.objectInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectInitValue([NotNull] AnimationParser.ObjectInitValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.objectInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectInitValue([NotNull] AnimationParser.ObjectInitValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.vectorInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVectorInitValue([NotNull] AnimationParser.VectorInitValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.vectorInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVectorInitValue([NotNull] AnimationParser.VectorInitValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.groupInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupInitValue([NotNull] AnimationParser.GroupInitValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.groupInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupInitValue([NotNull] AnimationParser.GroupInitValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.actionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionType([NotNull] AnimationParser.ActionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.actionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionType([NotNull] AnimationParser.ActionTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.objectValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectValue([NotNull] AnimationParser.ObjectValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.objectValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectValue([NotNull] AnimationParser.ObjectValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.vectorValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVectorValue([NotNull] AnimationParser.VectorValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.vectorValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVectorValue([NotNull] AnimationParser.VectorValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.numberValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberValue([NotNull] AnimationParser.NumberValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.numberValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberValue([NotNull] AnimationParser.NumberValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] AnimationParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] AnimationParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] AnimationParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] AnimationParser.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] AnimationParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] AnimationParser.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] AnimationParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] AnimationParser.VariableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] AnimationParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] AnimationParser.ModuleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCode([NotNull] AnimationParser.CodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCode([NotNull] AnimationParser.CodeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruction([NotNull] AnimationParser.InstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruction([NotNull] AnimationParser.InstructionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] AnimationParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] AnimationParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.parallel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParallel([NotNull] AnimationParser.ParallelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.parallel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParallel([NotNull] AnimationParser.ParallelContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequence([NotNull] AnimationParser.SequenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequence([NotNull] AnimationParser.SequenceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] AnimationParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] AnimationParser.CommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] AnimationParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] AnimationParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] AnimationParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] AnimationParser.ArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] AnimationParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] AnimationParser.FunctionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.objectAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectAssign([NotNull] AnimationParser.ObjectAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.objectAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectAssign([NotNull] AnimationParser.ObjectAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.groupAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupAssign([NotNull] AnimationParser.GroupAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.groupAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupAssign([NotNull] AnimationParser.GroupAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.numberAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberAssign([NotNull] AnimationParser.NumberAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.numberAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberAssign([NotNull] AnimationParser.NumberAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.vectorAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVectorAssign([NotNull] AnimationParser.VectorAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.vectorAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVectorAssign([NotNull] AnimationParser.VectorAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.booleanAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanAssign([NotNull] AnimationParser.BooleanAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.booleanAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanAssign([NotNull] AnimationParser.BooleanAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.allValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllValues([NotNull] AnimationParser.AllValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.allValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllValues([NotNull] AnimationParser.AllValuesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.variableAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableAssign([NotNull] AnimationParser.VariableAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.variableAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableAssign([NotNull] AnimationParser.VariableAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.altAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltAssign([NotNull] AnimationParser.AltAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.altAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltAssign([NotNull] AnimationParser.AltAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign([NotNull] AnimationParser.AssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign([NotNull] AnimationParser.AssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.comparingOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparingOperation([NotNull] AnimationParser.ComparingOperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.comparingOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparingOperation([NotNull] AnimationParser.ComparingOperationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.comparing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparing([NotNull] AnimationParser.ComparingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.comparing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparing([NotNull] AnimationParser.ComparingContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.altBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltBoolean([NotNull] AnimationParser.AltBooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.altBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltBoolean([NotNull] AnimationParser.AltBooleanContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.exprBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprBoolean([NotNull] AnimationParser.ExprBooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.exprBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprBoolean([NotNull] AnimationParser.ExprBooleanContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.termBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermBoolean([NotNull] AnimationParser.TermBooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.termBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermBoolean([NotNull] AnimationParser.TermBooleanContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.factBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactBoolean([NotNull] AnimationParser.FactBooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.factBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactBoolean([NotNull] AnimationParser.FactBooleanContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.booleanValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanValue([NotNull] AnimationParser.BooleanValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.booleanValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanValue([NotNull] AnimationParser.BooleanValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] AnimationParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] AnimationParser.ActionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] AnimationParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] AnimationParser.IfContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse([NotNull] AnimationParser.ElseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse([NotNull] AnimationParser.ElseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile([NotNull] AnimationParser.WhileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile([NotNull] AnimationParser.WhileContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.argValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgValue([NotNull] AnimationParser.ArgValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.argValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgValue([NotNull] AnimationParser.ArgValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] AnimationParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] AnimationParser.ArgumentsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="AnimationParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] AnimationParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnimationParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] AnimationParser.CallContext context);
}
} // namespace anim
